{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../shared/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction TaskListComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1, \" Nenhuma tarefa foi cadastrada \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/edit\", a1];\n};\nfunction TaskListComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 5)(1, \"div\", 6);\n    i0.ɵɵelement(2, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 8);\n    i0.ɵɵelementStart(4, \"div\")(5, \"button\", 9);\n    i0.ɵɵtext(6, \"Alterar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\")(8, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_8_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.remove(task_r2));\n    });\n    i0.ɵɵtext(9, \"Excluir\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", task_r2.description, i0.ɵɵsanitizeHtml)(\"ngClass\", task_r2.completed ? \"task-completed\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, task_r2.id));\n  }\n}\nconst _c1 = function () {\n  return [\"/new\"];\n};\nexport class TaskListComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    /* INJEÇÃO DE DEPENDENCIA\r\n    Link: https://angular.io/guide/dependency-injection\r\n    */\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.tasks = this.taskService.getAll();\n  }\n  remove(task) {\n    this.taskService.delete(task.id);\n  }\n}\nTaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n};\nTaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskListComponent,\n  selectors: [[\"app-task-list\"]],\n  inputs: {\n    task: \"task\"\n  },\n  decls: 9,\n  vars: 4,\n  consts: [[\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"bg-primary\", \"mb-2\", 3, \"routerLink\"], [\"class\", \"alert alert-warning\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"list-group\"], [\"class\", \"list-group-item task-item\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\"], [1, \"list-group-item\", \"task-item\"], [1, \"form-group\", \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\"], [1, \"task-item-description\", 3, \"innerHTML\", \"ngClass\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mr-1\", 3, \"routerLink\"], [\"type\", \"button\", \"id\", \"button-1\", 1, \"btn\", \"btn-danger\", \"mt-2\", 3, \"click\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Tarefa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"button\", 0);\n      i0.ɵɵtext(4, \" Nova Tarefa\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"section\");\n      i0.ɵɵtemplate(6, TaskListComponent_div_6_Template, 2, 0, \"div\", 1);\n      i0.ɵɵelementStart(7, \"ul\", 2);\n      i0.ɵɵtemplate(8, TaskListComponent_li_8_Template, 10, 5, \"li\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c1));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.tasks.length == 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.RouterLink],\n  styles: [\".task-item-description[_ngcontent-%COMP%]{\\r\\n  flex-grow: 1;\\r\\n  white-space: pre-line;\\r\\n}\\r\\n\\r\\n.task-item[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.task-completed[_ngcontent-%COMP%]{\\r\\n  text-decoration: line-through;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsNkJBQTZCO0FBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiLnRhc2staXRlbS1kZXNjcmlwdGlvbntcclxuICBmbGV4LWdyb3c6IDE7XHJcbiAgd2hpdGUtc3BhY2U6IHByZS1saW5lO1xyXG59XHJcblxyXG4udGFzay1pdGVte1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4udGFzay1jb21wbGV0ZWR7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XHJcbn1cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAQEA,8BAAyE;IACvEA,+CACF;IAAAA,iBAAM;;;;;;;;;IAIJA,6BAAiE;IAE7DA,2BAAkD;IACpDA,iBAAM;IAENA,yBAIM;IAENA,2BAAK;IACgFA,uBAAO;IAAAA,iBAAS;IAGrGA,2BAAK;IAC4DA;MAAA;MAAA;MAAA;MAAA,OAASA,qCAAY;IAAA,EAAC;IAACA,uBAAO;IAAAA,iBAAS;;;;IAXnGA,eAA8B;IAA9BA,kEAA8B;IAObA,eAAiC;IAAjCA,mEAAiC;;;;;;ACjB7D,OAAM,MAAOC,iBAAiB;EAU5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAT/B;;;IAIA,UAAK,GAAW,EAAE;EAOlB;EAEAC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,WAAW,CAACG,MAAM,EAAE;EACxC;EAEAC,MAAM,CAACC,IAAU;IACf,IAAI,CAACL,WAAW,CAACM,MAAM,CAACD,IAAI,CAACE,EAAE,CAAC;EAClC;;AApBWT,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAU;EAAAC;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MDT9BhB,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,qBAAM;MAENA,iCAAsF;MACpFA,8BACF;MAAAA,iBAAS;MAETA,+BAAS;MACPA,kEAEM;MAGNA,6BAAuB;MACrBA,iEAkBK;MACPA,iBAAK;;;MA9BuDA,eAAuB;MAAvBA,uDAAuB;MAK7EA,eAAuB;MAAvBA,4CAAuB;MAM4BA,eAAQ;MAARA,mCAAQ","names":["i0","TaskListComponent","constructor","taskService","ngOnInit","tasks","getAll","remove","task","delete","id","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\WK02\\Desktop\\smart\\newApp\\ToDoAppAngular\\src\\app\\tasks\\task-list\\task-list.component.html","C:\\Users\\WK02\\Desktop\\smart\\newApp\\ToDoAppAngular\\src\\app\\tasks\\task-list\\task-list.component.ts"],"sourcesContent":["<h1>Tarefa</h1>\n<hr />\n\n<button type=\"button\" class=\"btn btn-primary bg-primary mb-2\" [routerLink]=\"['/new']\">\n  Nova Tarefa\n</button>\n\n<section>\n  <div *ngIf=\"tasks.length == 0\" class=\"alert alert-warning\" role=\"alert\" >\n    Nenhuma tarefa foi cadastrada\n  </div>\n\n\n  <ul class=\"list-group\">\n    <li class=\"list-group-item task-item\" *ngFor=\"let task of tasks\">\n      <div class=\"form-group form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" />\n      </div>\n\n      <div [innerHTML]=\"task.description\" class=\"task-item-description\"\n      [ngClass]=\"task.completed ? 'task-completed' : '' \">\n      <!-- Interpolation -->\n\n      </div>\n\n      <div>\n      <button type=\"button\" [routerLink]=\"['/edit', task.id]\" class=\"btn btn-primary mr-1\">Alterar</button>\n      </div>\n\n      <div>\n      <button type=\"button\" id=\"button-1\"  class=\"btn btn-danger mt-2\" (click)=\"remove(task)\">Excluir</button>\n      </div>\n    </li>\n  </ul>\n</section>\n","import { TaskService } from './../shared/task.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport {Task} from '../shared/task';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n  /* INJEÇÃO DE DEPENDENCIA\n  Link: https://angular.io/guide/dependency-injection\n  */\n\n  tasks: Task[] = [];\n\n  @Input()\n  task : Task | undefined;\n\n  constructor(private taskService: TaskService){\n\n  }\n\n  ngOnInit() {\n    this.tasks = this.taskService.getAll();\n  }\n\n  remove(task: Task){\n    this.taskService.delete(task.id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}